{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATLAS\\\\Desktop\\\\MyFolder\\\\image\\\\hw3_imdb\\\\src\\\\components\\\\Movies.jsx\",\n  _s = $RefreshSig$();\nimport Pagination from \"./Pagination\";\nimport React, { useEffect, useState } from 'react';\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [Movies, fetchMovies] = useState([]);\n  const [loading] = useState(false);\n  const [currentPage, SetCurrentPage] = useState(1);\n  const [moviesPerpage] = useState(35);\n  useEffect(() => {\n    fetch('http://localhost:3500/movie_data').then(res => res.json()).then(res => {\n      fetchMovies(res);\n      console.log(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * moviesPerpage;\n  const indexOfFirstPost = indexOfLastPost - moviesPerpage;\n  const currentPosts = Movies.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pgNumber => SetCurrentPage(pgNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Movie, {\n      posts: currentPosts,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: moviesPerpage,\n      totalPosts: Movies.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Movies, \"egX/qHcF5XUwvCJ8FH3mPIsdGa8=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["Pagination","React","useEffect","useState","Movie","Movies","fetchMovies","loading","currentPage","SetCurrentPage","moviesPerpage","fetch","then","res","json","console","log","catch","err","error","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pgNumber","textAlign","length"],"sources":["C:/Users/ATLAS/Desktop/MyFolder/image/hw3_imdb/src/components/Movies.jsx"],"sourcesContent":["import Pagination from \"./Pagination\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport Movie from \"./Movie\"\r\n\r\n\r\nfunction Movies() {\r\n  const [Movies, fetchMovies] = useState([])\r\n  const [loading] = useState(false);\r\n  const [currentPage, SetCurrentPage] = useState(1);\r\n  const [moviesPerpage] = useState(35);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3500/movie_data')\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        fetchMovies(res)\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      })\r\n  }, []);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * moviesPerpage;\r\n  const indexOfFirstPost = indexOfLastPost - moviesPerpage;\r\n  const currentPosts = Movies.slice(indexOfFirstPost, indexOfLastPost)\r\n\r\n  // Change page\r\n  const paginate = pgNumber => SetCurrentPage(pgNumber);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{textAlign:'center'}}>Movies</h1>\r\n      <Movie posts={currentPosts} loading={loading} />\r\n      <Pagination\r\n        postsPerPage={moviesPerpage}\r\n        totalPosts={Movies.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default Movies;\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAA;AAG3B,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACA,MAAM,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACI,OAAO,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACO,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;MACbP,WAAW,CAACO,GAAG,CAAC;MAChBE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAClB,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,eAAe,GAAGZ,WAAW,GAAGE,aAAa;EACnD,MAAMW,gBAAgB,GAAGD,eAAe,GAAGV,aAAa;EACxD,MAAMY,YAAY,GAAGjB,MAAM,CAACkB,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAEpE;EACA,MAAMI,QAAQ,GAAGC,QAAQ,IAAIhB,cAAc,CAACgB,QAAQ,CAAC;EAKrD,oBACE;IAAA,wBACE;MAAI,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAY,eAC5C,QAAC,KAAK;MAAC,KAAK,EAAEJ,YAAa;MAAC,OAAO,EAAEf;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD,QAAC,UAAU;MACT,YAAY,EAAEG,aAAc;MAC5B,UAAU,EAAEL,MAAM,CAACsB,MAAO;MAC1B,QAAQ,EAAEH;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAxCQnB,MAAM;AAAA,KAANA,MAAM;AAyCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}